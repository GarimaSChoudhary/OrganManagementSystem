/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Network.Network;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noordeep
 */
public class NetworkManagementJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    ArrayList<String> networkstring = new ArrayList<String>();
    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public NetworkManagementJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        addanewnetworks();
        LoadNetworkTable();
    }
    public void addanewnetworks(){
        for(Network n:system.getNetworkList()){
            networkstring.add(n.toString());
        }
    }

    private void LoadNetworkTable() {
        DefaultTableModel model = (DefaultTableModel) tbl_list_of_network.getModel();
        //set the row count as zero on initial page load
        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            Object[] row = new Object[1];
            row[0] = network.getName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_list_of_network = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btn_add_new_city = new javax.swing.JButton();
        txt_city_Name = new javax.swing.JTextField();
        btn_back_button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbl_CitiesPresentInNetwork = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDeleteCity = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));

        tbl_list_of_network.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbl_list_of_network.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        tbl_list_of_network.setForeground(new java.awt.Color(153, 0, 0));
        tbl_list_of_network.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Network"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_list_of_network.setSelectionBackground(new java.awt.Color(255, 102, 102));
        tbl_list_of_network.setSelectionForeground(new java.awt.Color(255, 255, 51));
        jScrollPane1.setViewportView(tbl_list_of_network);
        if (tbl_list_of_network.getColumnModel().getColumnCount() > 0) {
            tbl_list_of_network.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Name:");

        btn_add_new_city.setBackground(new java.awt.Color(0, 102, 153));
        btn_add_new_city.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btn_add_new_city.setForeground(new java.awt.Color(255, 255, 255));
        btn_add_new_city.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        btn_add_new_city.setText("Add City");
        btn_add_new_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_new_cityActionPerformed(evt);
            }
        });

        txt_city_Name.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N

        btn_back_button.setBackground(new java.awt.Color(0, 102, 153));
        btn_back_button.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btn_back_button.setForeground(new java.awt.Color(255, 255, 255));
        btn_back_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back3.png"))); // NOI18N
        btn_back_button.setText("Back");
        btn_back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_back_buttonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Network of Cities");

        lbl_CitiesPresentInNetwork.setFont(new java.awt.Font("Cambria", 2, 18)); // NOI18N
        lbl_CitiesPresentInNetwork.setText("Cities present in network");

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel4.setText("Add a city to the network");

        btnDeleteCity.setText("Delete");
        btnDeleteCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_CitiesPresentInNetwork)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(btn_add_new_city, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btn_back_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnDeleteCity))
                                            .addComponent(txt_city_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(349, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDeleteCity, btn_add_new_city});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel2)
                .addGap(67, 67, 67)
                .addComponent(lbl_CitiesPresentInNetwork)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel1))
                            .addComponent(txt_city_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_add_new_city, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteCity))
                        .addGap(29, 29, 29)
                        .addComponent(btn_back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(417, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_add_new_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_new_cityActionPerformed

        int Flag=0;
        String name = txt_city_Name.getText();
        if (name.matches("^([A-Za-z]+)(\\s[A-Za-z]+)*\\s?$")) {
            name = name.trim();
            for(String s:networkstring){
                if(s.equalsIgnoreCase(name)){
                    JOptionPane.showMessageDialog(null, "Please add another city, the city already exists in the network");
                    Flag=1;
                    break;
                }
            }
            if(Flag==0){
            networkstring.add(name);
            Network network = system.createAndAddNetwork();
            network.setName(name);
            LoadNetworkTable();
            txt_city_Name.setText("");
            }    
        } else {
            //Throw a dialog box if a special character is used
            JOptionPane.showMessageDialog(null,"Invalid text, special chanracters not allowed");
        }
    }//GEN-LAST:event_btn_add_new_cityActionPerformed

    private void btn_back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_back_buttonActionPerformed
        userProcessContainer.remove(this);
        Component[] ArrayofComponent = userProcessContainer.getComponents();
        Component component = ArrayofComponent[ArrayofComponent.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwJPanel = (SystemAdminWorkAreaJPanel) component;
        sysAdminwJPanel.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_back_buttonActionPerformed

    private void btnDeleteCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCityActionPerformed
        // TODO add your handling code here:
                int selectedRowIndex = tbl_list_of_network.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tbl_list_of_network.getModel();
        String selectedNetwork =  model.getValueAt(selectedRowIndex, 0).toString();
        Network network = system.getNetworkByName(selectedNetwork);
        system.deleteNetwork(network);
        LoadNetworkTable();
        
    }//GEN-LAST:event_btnDeleteCityActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteCity;
    private javax.swing.JButton btn_add_new_city;
    private javax.swing.JButton btn_back_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_CitiesPresentInNetwork;
    private javax.swing.JTable tbl_list_of_network;
    private javax.swing.JTextField txt_city_Name;
    // End of variables declaration//GEN-END:variables
}
